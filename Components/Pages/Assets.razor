@page "/Aktiv"

<div class="AssetContainer">
    <div class="TopContainer">
        <div class="TopQuestion">
            <label>Har du en bil?</label>
            <div class="toggle-container">
                <MudSwitch @bind-Value="Car" Color="Color.Success" Size="Size.Large" @onclick="CarBool" />
            </div>
        </div>
        <div class="TopQuestion">
            <label>Har du en bolig?</label>
            <div class="toggle-container">
                <MudSwitch @bind-Value="Home" Color="Color.Success" Size="Size.Large" @onclick="HomeBool"/>
            </div>
        </div>
        <div class="TopQuestion">
            <label>Har du en opsparing?</label>
            <div class="toggle-container">
                <MudSwitch @bind-Value="TempBool" Color="Color.Success" Size="Size.Large" />
            </div>
        </div>
    </div>

    <div class="SelectorContainer">
        @foreach (var asset in AssetsRepository.Assets)
        {
            <div class="Selector">
                <AssetSelectorComponent asset="asset" OnClose="HandleClose" />
            </div>
        }
        <div class="Selector" id="ButtonBox">
            <button @onclick="AddAsset">Tilføj flere (+)</button>
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        Car = AssetsRepository.Car;
        Home = AssetsRepository.Home;
        TempBool = AssetsRepository.TempBool;
    }

    private bool Car;
    private bool Home;
    private bool TempBool;

    private void CarBool()
    {
        Car = !Car;
        AssetsRepository.Car = Car;
        if (Car)
        {
            if (!AssetsRepository.Assets.Any(a => a.Type == AssetType.Køretøj))
            {
                var asset = new Asset(AssetType.Køretøj);
                AssetsRepository.AddAsset(asset);
            }
        }
        else
        {
            var asset = AssetsRepository.Assets.FirstOrDefault(a => a.Type == AssetType.Køretøj);
            if (asset != null)
            {
                asset.IsCar = false;
                AssetsRepository.UpdateAsset(asset);
            }
        }
    }

    private void HomeBool()
    {
        Home = !Home;
        AssetsRepository.Home = Home;
        if (Home)
        {
            if (!AssetsRepository.Assets.Any(a => a.Type == AssetType.Bolig))
            {
                var asset = new Asset(AssetType.Bolig);
                AssetsRepository.AddAsset(asset);
            }
        }
        else
        {
            var asset = AssetsRepository.Assets.FirstOrDefault(a => a.Type == AssetType.Bolig);
            if (asset != null)
            {
                asset.IsHome = false;
                AssetsRepository.UpdateAsset(asset);
            }
        }
    }

    private void TempBoolChanged()
    {
        TempBool = !TempBool;
        AssetsRepository.TempBool = TempBool;
    }

    private void AddAsset()
    {
        var asset = new Asset(AssetType.Værdigenstand);
        AssetsRepository.AddAsset(asset);
    }

    private void HandleClose(Asset asset)
    {
        AssetsRepository.Assets.Remove(asset);
    }
}
``