@page "/Arvinger"
@using Arvefordeleren.Components.Layout

<div class="HeirContainer">
    <div class="TopContainer">
        <h1>Indtast dine arvinger</h1>
    </div>
    <div class="SelectorContainer">
        @foreach (var heir in HeirsRepository.Heirs)
        {
            <div class="Selector">
                <HeirSelectorComponent Heir="heir" OnClose="HandleClose"/>
            </div>
        }
        
        <div class="Selector" id="ButtonBox">
            <button class="AddButton" @onclick="AddHeir">Tilføj flere (+)</button>
        </div>
    </div>

    <div>
        <button class="TreeButton" @onclick="ShowFamilyTree">Se Stamtræ</button>
    </div>

    @if (IsTreeVisable) // Alt herunder fungere ikke helt godt, det meget rodet og måske lidt svært at forstå.
    {
        <div class="FamilyTreePopup">
            <div class="FamilyTreeContainer">
                <div class="TreeChildren">
                    @foreach (var parent in Parents)
                    {
                        <div class="TreeNode">
                            <div class="HeirBox">@parent.Name (@parent.Relation)</div>
                        </div>
                    }
                </div>
                <div class="TreeNode">
                    <div class="HeirBox">Dig
                        <div class="TreeChildren">
                            @foreach (var child in Children)
                            {
                                <div class="TreeNode">
                                    <div class="HeirBox">@child.Name (@child.Relation)</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [CascadingParameter] public NavMenu? NavMenu { get; set; }

    private bool IsTreeVisable = false;

    //De her to laver egentlig bare en liste med given relationtype
    private List<Heir> Parents => HeirsRepository.Heirs.Where(h => h.Relation == RelationType.Forældre).ToList();
    private List<Heir> Children => HeirsRepository.Heirs.Where(h => h.Relation == RelationType.Barn).ToList();


    protected override void OnInitialized()
    {
        Validate();
    }

    private void ShowFamilyTree()
    {
        IsTreeVisable = !IsTreeVisable;
    }

    private void AddHeir()
    {
        HeirsRepository.AddHeir(new Heir());
        StateHasChanged(); 
    }
    
    private void HandleClose(Heir heir)
    {
        HeirsRepository.RemoveHeir(heir.Id);
        StateHasChanged(); 
        Validate();
    }

    private void Validate()
    {
        if (!HeirsRepository.Heirs.Any() && NavMenu != null)
        {
            NavMenu.IsValid = false;
        }
    }
}
