@using Arvefordeleren.Components.Pages
<div class="HeirContainer">
    <div class="TopBox">
        <div>
            <h4>Arving</h4>
        </div>
        <div class="AssetContainer-remove-btn">
            <button class="Remove-btn" @onclick="() => Close(Heir)">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>

    
    <EditForm Model="Heir">
        <InputText @bind-Value="Heir.Name" type="text" placeholder="Indtast Navn"/>
        <select @bind="Heir.Relation" name="Relation">
            @foreach (var relation in Enum.GetValues<RelationType>())
            {
                <option value="@relation">@relation.ToString()</option>
            }
        </select>
    </EditForm>

</div>


@code {
    private bool Note = false;
    private List<Heir> HeirsList { get; set; } = HeirsRepository.Heirs;

    private void RemoveHeir(Heir heir)
    {
        HeirsRepository.RemoveHeir(heir.Id);
        HeirsList = HeirsRepository.Heirs;
        StateHasChanged();
    }


    [Parameter]
    public Heir Heir { get; set; }

    [Parameter]
    public EventCallback<Heir> OnClose { get; set; }

    private async void Close(Heir heir)
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync(heir);
        }
    }

}