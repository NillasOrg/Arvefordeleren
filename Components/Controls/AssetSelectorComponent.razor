<div class="AssetContainer">
    <div>
        <div>
            <h4>Aktiv</h4>
        </div>
        <div class="AssetContainer-remove-btn">
            <button class="Remove-btn" @onclick="() => Close(asset)">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
    <EditForm Model="asset">
        <InputSelect @bind-Value="asset.Type" name="Types">
            @foreach (AssetType type in Enum.GetValues(typeof(AssetType)))
            {
                <option value=@type>@type.ToString()</option>
            }
        </InputSelect>

        @if (Note || asset.Note != null)
        {
        <InputText @bind-Value="asset.Note" id="inputBox" placeholder="Note"/>
        }
        else
        {
        <div class="NoteBox">
            <a @onclick="() => Note = true">Tilføj Note (+)</a>
        </div>
        }
    </EditForm>
    
    <a>Hjælp</a>
</div>


@code {
    [Parameter]
    public Asset asset { get; set; }

    private bool Note = false;

    [Parameter]
    public EventCallback<Asset> OnClose { get; set; }

    private async void Close(Asset asset)
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync(asset);
        }
    }

}