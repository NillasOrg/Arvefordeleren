@using Arvefordeleren.Models.Repositories;

    <div class="title">
        <div class="title-left">
            <h4>Friarv</h4>
        </div>
        <div class="title-right">
            <div class="tooltip">
                Hjælp
                <span class="tooltiptext">Dette er resultatet er deres friarv. Her kan de se fordelingen baseret på dine indtastninger. De kan frit gå tilbage og ændre for at se en anderledes konstellation.</span>
            </div>
        </div>
    </div>
    
<h3>FreePiechartComponent</h3>

@if (HeirsList == null || !HeirsList.Any())
{
    <span>No data available for Heirs</span>
}
else
{
    <div>
    
    <span>Heirs modtaget fra "HeirsList" Count: @HeirsList.Count</span>
    <br />
    <span>Indsæt value for Heirs "Share"</span>

   
    <MudPaper Class="mud-p-4">
        @foreach (var heir in HeirsList)
        {
            <MudTextField Label=@($"Share for Arving: {heir.Name} ")
                          @bind-Value="heir.Share"
                          Type="number"
                          Class="mud-mb-2">
            </MudTextField>
        }

        <MudChart ChartType="ChartType.Pie"
                  InputData="@HeirsValues.ToArray()"
                  InputLabels="@HeirsLabels.ToArray()"
                  Width="400px"
                  Height="400px">
        </MudChart>
    </MudPaper>
    </div>
</div>
@code {

    public class PieChartSeriesProps
    {
        public string Name { get; set; }
        public double Value { get; set; }

    }

    [Parameter]
    public List<PieChartSeriesProps> InheritanceInput { get; set; } = new List<PieChartSeriesProps>();
    private List<Heir> HeirsList => HeirsRepository.Heirs;

    private List<double> HeirsValues => HeirsList.Select(h => h.Share).ToList();
    private List<string> HeirsLabels => HeirsList.Select(h => h.Name).ToList();
}